cmake_minimum_required(VERSION 3.10)
project(opengl)
if (${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
    set(CMAKE_CXX_STANDARD 11)
    set(CMAKE_CXX_FLAGS "-O3 -stdlib=libc++ -lglfw -lGL -lm -ldl -lXi -lXcursor -lX11")
    include_directories("${PROJECT_SOURCE_DIR}/linux/GLFW")
    include_directories("${PROJECT_SOURCE_DIR}/linux/GLFW/GL")
    include_directories("${PROJECT_SOURCE_DIR}/linux/GLFW/KHR")
    set(SOURCE_FILES ssao.cpp linux/GLFW/gl3w.c sb6mfile.h vmath.h object.h shader.h)
    add_executable(opengl ${SOURCE_FILES})
elseif (${CMAKE_CXX_COMPILER_ID} STREQUAL MSVC)
    set(CMAKE_CXX_STANDARD 11)
    include_directories("win/headers/GLFW")
    include_directories("win/headers/GLFW/GL")
    include_directories("win/headers/GLFW/KHR")
    set(SOURCE_FILES ssao.cpp win/headers/GLFW/gl3w.c sb6mfile.h vmath.h object.h shader.h)
    add_executable(opengl WIN32 ${SOURCE_FILES})
    target_link_libraries(opengl "${PROJECT_SOURCE_DIR}/win/lib/glfw3.lib")
    target_link_libraries(opengl "${PROJECT_SOURCE_DIR}/win/lib/OpenGL32.Lib")
    target_link_libraries(opengl "${PROJECT_SOURCE_DIR}/win/lib/GlU32.Lib")
endif()